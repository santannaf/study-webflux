spring.application.name=customer-demo-webflux
spring.threads.virtual.enabled=${VIRTUAL_THREADS_ENABLED:true}
### Thread Pool
server.netty.connection-timeout=${SERVER_HTTP_CONN_TIMEOUT:5000}
### Database
spring.r2dbc.url=r2dbc:postgresql://${DB_HOST:localhost}:5432/${DB_DATABASE:rinha}
spring.datasource.driver-class-name=com.p6spy.engine.spy.P6SpyDriver
spring.r2dbc.username=${DB_USER:rinha}
spring.r2dbc.password=${DB_PASSWORD:rinha}
spring.r2dbc.pool.initial-size=${DB_POOL_INITIAL_SIZE:10}
spring.r2dbc.pool.max-size=${DB_POOL_MAX_SIZE:10}
spring.r2dbc.pool.max-life-time=${DB_POOL_MAX_LIFETIME:2000000}
spring.r2dbc.pool.validation-query=select 1 + 1

### Spring AI
spring.ai.openai.api-key=${OPENAI_API_KEY}

### Server Config
server.port=${PORT:8080}

management.endpoints.web.exposure.include=*


### Actuator Management Config
#management.endpoint.health.probes.enabled=true
#management.endpoint.health.group.liveness.include=ping
#management.endpoint.health.group.readiness.include=ping
#management.endpoint.health.show-details=always
#management.endpoints.web.exposure.include=metrics,info,health
#management.health.livenessstate.enabled=true
#management.health.readinessstate.enabled=true
#management.metrics.distribution.percentiles-histogram.http.server.requests=true
#management.metrics.tags.instance.name=${INSTANCE_NAME:my-instance-name}
#management.metrics.tags.instance.ip=${INSTANCE_IP:my-instance-ip}
#management.metrics.tags.env=${ENV:local}
#management.metrics.tags.server=${SERVER:onPremise}
#management.metrics.tags.team=my_team
#management.metrics.tags.service.name=${spring.application.name}
#management.otlp.metrics.export.url=http://localhost:4318/v1/metrics
#management.otlp.metrics.export.aggregation-temporality=cumulative
#management.otlp.metrics.export.step=10s
#management.otlp.metrics.export.base-time-unit=milliseconds
#management.tracing.sampling.probability=1.0
#management.otlp.tracing.export.enabled=true
#management.otlp.logging.transport=http
#management.otlp.tracing.endpoint=http://localhost:4318/v1/traces
#management.opentelemetry.resource-attributes.service.name=${spring.application.name}
#management.opentelemetry.resource-attributes.cluster=local

## Otel Config
#otel.propagators=tracecontext,b3,b3multi,baggage
#otel.exporter.otlp.protocol=grpc
#otel.exporter.otlp.traces.protocol=grpc
#otel.exporter.otlp.metrics.endpoint=http://localhost:4317
#otel.exporter.otlp.traces.endpoint=http://localhost:4317
#otel.exporter.otlp.logs.endpoint=http://localhost:4317
#otel.logs.exporter=none
#otel.service.name=${spring.application.name}
